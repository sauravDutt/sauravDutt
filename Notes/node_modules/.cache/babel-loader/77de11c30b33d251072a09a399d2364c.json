{"ast":null,"code":"import { __assign, __spreadArrays, __rest } from 'tslib';\nimport { hex, rgba, hsla, complex, color } from 'style-value-types';\nimport { invariant } from 'hey-listen';\nimport sync, { cancelSync, getFrameData } from 'framesync';\n\nvar SpringAnimator = /*#__PURE__*/function () {\n  function SpringAnimator(options) {\n    this.isComplete = false;\n    this.updateOptions(options);\n    this.createSpring();\n  }\n\n  SpringAnimator.prototype.createSpring = function () {\n    var _a = this.options,\n        velocity = _a.velocity,\n        from = _a.from,\n        to = _a.to,\n        damping = _a.damping,\n        stiffness = _a.stiffness,\n        mass = _a.mass;\n    var initialVelocity = velocity ? -(velocity / 1000) : 0.0;\n    var initialDelta = to - from;\n    var dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    var angularFreq = Math.sqrt(stiffness / mass) / 1000;\n\n    if (dampingRatio < 1) {\n      this.resolveSpring = function (t) {\n        var envelope = Math.exp(-dampingRatio * angularFreq * t);\n        var expoDecay = angularFreq * Math.sqrt(1.0 - dampingRatio * dampingRatio);\n        return to - envelope * ((initialVelocity + dampingRatio * angularFreq * initialDelta) / expoDecay * Math.sin(expoDecay * t) + initialDelta * Math.cos(expoDecay * t));\n      };\n\n      this.resolveVelocity = function (t) {\n        var envelope = Math.exp(-dampingRatio * angularFreq * t);\n        var expoDecay = angularFreq * Math.sqrt(1.0 - dampingRatio * dampingRatio);\n        return dampingRatio * angularFreq * envelope * (Math.sin(expoDecay * t) * (initialVelocity + dampingRatio * angularFreq * initialDelta) / expoDecay + initialDelta * Math.cos(expoDecay * t)) - envelope * (Math.cos(expoDecay * t) * (initialVelocity + dampingRatio * angularFreq * initialDelta) - expoDecay * initialDelta * Math.sin(expoDecay * t));\n      };\n    } else if (dampingRatio === 1) {\n      this.resolveSpring = function (t) {\n        var envelope = Math.exp(-angularFreq * t);\n        return to - envelope * (initialDelta + (initialVelocity + angularFreq * initialDelta) * t);\n      };\n\n      this.resolveVelocity = function () {\n        return 0;\n      };\n    } else {\n      var dampedAngularFreq_1 = angularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n\n      this.resolveSpring = function (t) {\n        var envelope = Math.exp(-dampingRatio * angularFreq * t);\n        return to - envelope * ((initialVelocity + dampingRatio * angularFreq * initialDelta) * Math.sinh(dampedAngularFreq_1 * t) + dampedAngularFreq_1 * initialDelta * Math.cosh(dampedAngularFreq_1 * t)) / dampedAngularFreq_1;\n      };\n\n      this.resolveVelocity = function () {\n        return 0;\n      };\n    }\n  };\n\n  SpringAnimator.prototype.update = function (t) {\n    var _a = this.options,\n        restSpeed = _a.restSpeed,\n        restDelta = _a.restDelta,\n        to = _a.to;\n    var latest = this.resolveSpring(t);\n    var velocity = this.resolveVelocity(t) * 1000;\n    var isBelowVelocityThreshold = Math.abs(velocity) <= restSpeed;\n    var isBelowDisplacementThreshold = Math.abs(to - latest) <= restDelta;\n    this.isComplete = isBelowVelocityThreshold && isBelowDisplacementThreshold;\n    return this.isComplete ? to : latest;\n  };\n\n  SpringAnimator.prototype.updateOptions = function (_a) {\n    var _b = _a.from,\n        from = _b === void 0 ? 0.0 : _b,\n        _c = _a.to,\n        to = _c === void 0 ? 0.0 : _c,\n        _d = _a.velocity,\n        velocity = _d === void 0 ? 0.0 : _d,\n        _e = _a.stiffness,\n        stiffness = _e === void 0 ? 100 : _e,\n        _f = _a.damping,\n        damping = _f === void 0 ? 10 : _f,\n        _g = _a.mass,\n        mass = _g === void 0 ? 1.0 : _g,\n        _h = _a.restSpeed,\n        restSpeed = _h === void 0 ? 2 : _h,\n        restDelta = _a.restDelta;\n\n    if (restDelta === undefined) {\n      restDelta = Math.abs(to - from) <= 1 ? 0.01 : 0.4;\n    }\n\n    this.options = {\n      from: from,\n      to: to,\n      velocity: velocity,\n      stiffness: stiffness,\n      damping: damping,\n      mass: mass,\n      restSpeed: restSpeed,\n      restDelta: restDelta\n    };\n  };\n\n  SpringAnimator.prototype.flipTarget = function () {\n    var _a = this.options,\n        from = _a.from,\n        to = _a.to,\n        velocity = _a.velocity;\n    this.options.velocity = -velocity;\n    this.options.from = to;\n    this.options.to = from;\n    this.createSpring();\n  };\n\n  SpringAnimator.needsInterpolation = function (from, to) {\n    return typeof from === \"string\" || typeof to === \"string\";\n  };\n\n  SpringAnimator.uniqueOptionKeys = /*#__PURE__*/new Set([\"velocity\", \"stiffness\", \"damping\", \"mass\", \"restSpeed\", \"restDelta\"]);\n  return SpringAnimator;\n}();\n\nvar progress = function (from, to, value) {\n  var toFromDifference = to - from;\n  return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nvar mix = function (from, to, progress) {\n  return -progress * from + progress * to + from;\n};\n\nvar mixLinearColor = function (from, to, v) {\n  var fromExpo = from * from;\n  var toExpo = to * to;\n  return Math.sqrt(Math.max(0, v * (toExpo - fromExpo) + fromExpo));\n};\n\nvar colorTypes = [hex, rgba, hsla];\n\nvar getColorType = function (v) {\n  return colorTypes.find(function (type) {\n    return type.test(v);\n  });\n};\n\nvar notAnimatable = function (color) {\n  return \"'\" + color + \"' is not an animatable color. Use the equivalent color code instead.\";\n};\n\nvar mixColor = function (from, to) {\n  var fromColorType = getColorType(from);\n  var toColorType = getColorType(to);\n  invariant(!!fromColorType, notAnimatable(from));\n  invariant(!!toColorType, notAnimatable(to));\n  invariant(fromColorType.transform === toColorType.transform, 'Both colors must be hex/RGBA, OR both must be HSLA.');\n  var fromColor = fromColorType.parse(from);\n  var toColor = toColorType.parse(to);\n\n  var blended = __assign({}, fromColor);\n\n  var mixFunc = fromColorType === hsla ? mix : mixLinearColor;\n  return function (v) {\n    for (var key in blended) {\n      if (key !== 'alpha') {\n        blended[key] = mixFunc(fromColor[key], toColor[key], v);\n      }\n    }\n\n    blended.alpha = mix(fromColor.alpha, toColor.alpha, v);\n    return fromColorType.transform(blended);\n  };\n};\n\nvar zeroPoint = {\n  x: 0,\n  y: 0,\n  z: 0\n};\n\nvar isNum = function (v) {\n  return typeof v === 'number';\n};\n\nvar combineFunctions = function (a, b) {\n  return function (v) {\n    return b(a(v));\n  };\n};\n\nvar pipe = function () {\n  var transformers = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    transformers[_i] = arguments[_i];\n  }\n\n  return transformers.reduce(combineFunctions);\n};\n\nfunction getMixer(origin, target) {\n  if (isNum(origin)) {\n    return function (v) {\n      return mix(origin, target, v);\n    };\n  } else if (color.test(origin)) {\n    return mixColor(origin, target);\n  } else {\n    return mixComplex(origin, target);\n  }\n}\n\nvar mixArray = function (from, to) {\n  var output = __spreadArrays(from);\n\n  var numValues = output.length;\n  var blendValue = from.map(function (fromThis, i) {\n    return getMixer(fromThis, to[i]);\n  });\n  return function (v) {\n    for (var i = 0; i < numValues; i++) {\n      output[i] = blendValue[i](v);\n    }\n\n    return output;\n  };\n};\n\nvar mixObject = function (origin, target) {\n  var output = __assign(__assign({}, origin), target);\n\n  var blendValue = {};\n\n  for (var key in output) {\n    if (origin[key] !== undefined && target[key] !== undefined) {\n      blendValue[key] = getMixer(origin[key], target[key]);\n    }\n  }\n\n  return function (v) {\n    for (var key in blendValue) {\n      output[key] = blendValue[key](v);\n    }\n\n    return output;\n  };\n};\n\nfunction analyse(value) {\n  var parsed = complex.parse(value);\n  var numValues = parsed.length;\n  var numNumbers = 0;\n  var numRGB = 0;\n  var numHSL = 0;\n\n  for (var i = 0; i < numValues; i++) {\n    if (numNumbers || typeof parsed[i] === 'number') {\n      numNumbers++;\n    } else {\n      if (parsed[i].hue !== undefined) {\n        numHSL++;\n      } else {\n        numRGB++;\n      }\n    }\n  }\n\n  return {\n    parsed: parsed,\n    numNumbers: numNumbers,\n    numRGB: numRGB,\n    numHSL: numHSL\n  };\n}\n\nvar mixComplex = function (origin, target) {\n  var template = complex.createTransformer(target);\n  var originStats = analyse(origin);\n  var targetStats = analyse(target);\n  invariant(originStats.numHSL === targetStats.numHSL && originStats.numRGB === targetStats.numRGB && originStats.numNumbers >= targetStats.numNumbers, \"Complex values '\" + origin + \"' and '\" + target + \"' too different to mix. Ensure all colors are of the same type.\");\n  return pipe(mixArray(originStats.parsed, targetStats.parsed), template);\n};\n\nvar clamp = function (min, max, v) {\n  return Math.min(Math.max(v, min), max);\n};\n\nvar mixNumber = function (from, to) {\n  return function (p) {\n    return mix(from, to, p);\n  };\n};\n\nfunction detectMixerFactory(v) {\n  if (typeof v === 'number') {\n    return mixNumber;\n  } else if (typeof v === 'string') {\n    if (color.test(v)) {\n      return mixColor;\n    } else {\n      return mixComplex;\n    }\n  } else if (Array.isArray(v)) {\n    return mixArray;\n  } else if (typeof v === 'object') {\n    return mixObject;\n  }\n}\n\nfunction createMixers(output, ease, customMixer) {\n  var mixers = [];\n  var mixerFactory = customMixer || detectMixerFactory(output[0]);\n  var numMixers = output.length - 1;\n\n  for (var i = 0; i < numMixers; i++) {\n    var mixer = mixerFactory(output[i], output[i + 1]);\n\n    if (ease) {\n      var easingFunction = Array.isArray(ease) ? ease[i] : ease;\n      mixer = pipe(easingFunction, mixer);\n    }\n\n    mixers.push(mixer);\n  }\n\n  return mixers;\n}\n\nfunction fastInterpolate(_a, _b) {\n  var from = _a[0],\n      to = _a[1];\n  var mixer = _b[0];\n  return function (v) {\n    return mixer(progress(from, to, v));\n  };\n}\n\nfunction slowInterpolate(input, mixers) {\n  var inputLength = input.length;\n  var lastInputIndex = inputLength - 1;\n  return function (v) {\n    var mixerIndex = 0;\n    var foundMixerIndex = false;\n\n    if (v <= input[0]) {\n      foundMixerIndex = true;\n    } else if (v >= input[lastInputIndex]) {\n      mixerIndex = lastInputIndex - 1;\n      foundMixerIndex = true;\n    }\n\n    if (!foundMixerIndex) {\n      var i = 1;\n\n      for (; i < inputLength; i++) {\n        if (input[i] > v || i === lastInputIndex) {\n          break;\n        }\n      }\n\n      mixerIndex = i - 1;\n    }\n\n    var progressInRange = progress(input[mixerIndex], input[mixerIndex + 1], v);\n    return mixers[mixerIndex](progressInRange);\n  };\n}\n\nfunction interpolate(input, output, _a) {\n  var _b = _a === void 0 ? {} : _a,\n      _c = _b.clamp,\n      isClamp = _c === void 0 ? true : _c,\n      ease = _b.ease,\n      mixer = _b.mixer;\n\n  var inputLength = input.length;\n  invariant(inputLength === output.length, 'Both input and output ranges must be the same length');\n  invariant(!ease || !Array.isArray(ease) || ease.length === inputLength - 1, 'Array of easing functions must be of length `input.length - 1`, as it applies to the transitions **between** the defined values.');\n\n  if (input[0] > input[inputLength - 1]) {\n    input = [].concat(input);\n    output = [].concat(output);\n    input.reverse();\n    output.reverse();\n  }\n\n  var mixers = createMixers(output, ease, mixer);\n  var interpolator = inputLength === 2 ? fastInterpolate(input, mixers) : slowInterpolate(input, mixers);\n  return isClamp ? function (v) {\n    return interpolator(clamp(input[0], input[inputLength - 1], v));\n  } : interpolator;\n}\n\nvar reverseEasing = function (easing) {\n  return function (p) {\n    return 1 - easing(1 - p);\n  };\n};\n\nvar mirrorEasing = function (easing) {\n  return function (p) {\n    return p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n  };\n};\n\nvar createExpoIn = function (power) {\n  return function (p) {\n    return Math.pow(p, power);\n  };\n};\n\nvar createBackIn = function (power) {\n  return function (p) {\n    return p * p * ((power + 1) * p - power);\n  };\n};\n\nvar createAnticipate = function (power) {\n  var backEasing = createBackIn(power);\n  return function (p) {\n    return (p *= 2) < 1 ? 0.5 * backEasing(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n  };\n};\n\nvar DEFAULT_OVERSHOOT_STRENGTH = 1.525;\nvar BOUNCE_FIRST_THRESHOLD = 4.0 / 11.0;\nvar BOUNCE_SECOND_THRESHOLD = 8.0 / 11.0;\nvar BOUNCE_THIRD_THRESHOLD = 9.0 / 10.0;\n\nvar linear = function (p) {\n  return p;\n};\n\nvar easeIn = /*#__PURE__*/createExpoIn(2);\nvar easeOut = /*#__PURE__*/reverseEasing(easeIn);\nvar easeInOut = /*#__PURE__*/mirrorEasing(easeIn);\n\nvar circIn = function (p) {\n  return 1 - Math.sin(Math.acos(p));\n};\n\nvar circOut = /*#__PURE__*/reverseEasing(circIn);\nvar circInOut = /*#__PURE__*/mirrorEasing(circOut);\nvar backIn = /*#__PURE__*/createBackIn(DEFAULT_OVERSHOOT_STRENGTH);\nvar backOut = /*#__PURE__*/reverseEasing(backIn);\nvar backInOut = /*#__PURE__*/mirrorEasing(backIn);\nvar anticipate = /*#__PURE__*/createAnticipate(DEFAULT_OVERSHOOT_STRENGTH);\nvar ca = 4356.0 / 361.0;\nvar cb = 35442.0 / 1805.0;\nvar cc = 16061.0 / 1805.0;\n\nvar bounceOut = function (p) {\n  if (p === 1 || p === 0) return p;\n  var p2 = p * p;\n  return p < BOUNCE_FIRST_THRESHOLD ? 7.5625 * p2 : p < BOUNCE_SECOND_THRESHOLD ? 9.075 * p2 - 9.9 * p + 3.4 : p < BOUNCE_THIRD_THRESHOLD ? ca * p2 - cb * p + cc : 10.8 * p * p - 20.52 * p + 10.72;\n};\n\nvar bounceIn = /*#__PURE__*/reverseEasing(bounceOut);\n\nvar bounceInOut = function (p) {\n  return p < 0.5 ? 0.5 * (1.0 - bounceOut(1.0 - p * 2.0)) : 0.5 * bounceOut(p * 2.0 - 1.0) + 0.5;\n};\n\nfunction defaultEasing(values, easing) {\n  return values.map(function () {\n    return easing || easeInOut;\n  }).splice(0, values.length - 1);\n}\n\nfunction defaultOffset(values) {\n  var numValues = values.length;\n  return values.map(function (_value, i) {\n    return i !== 0 ? i / (numValues - 1) : 0;\n  });\n}\n\nfunction convertOffsetToTimes(offset, duration) {\n  return offset.map(function (o) {\n    return o * duration;\n  });\n}\n\nvar KeyframesAnimator = /*#__PURE__*/function () {\n  function KeyframesAnimator(options) {\n    this.isComplete = false;\n    this.updateOptions(options);\n    var _a = this.options,\n        from = _a.from,\n        to = _a.to;\n    this.values = Array.isArray(to) ? to : [from, to];\n    this.createInterpolator();\n  }\n\n  KeyframesAnimator.prototype.createInterpolator = function () {\n    var _a = this.options,\n        duration = _a.duration,\n        ease = _a.ease,\n        offset = _a.offset;\n    ease = Array.isArray(ease) ? ease : defaultEasing(this.values, ease);\n    offset = offset || defaultOffset(this.values);\n    var times = convertOffsetToTimes(offset, duration);\n    this.interpolator = interpolate(times, this.values, {\n      ease: ease\n    });\n  };\n\n  KeyframesAnimator.prototype.update = function (t) {\n    var duration = this.options.duration;\n    this.isComplete = t >= duration;\n    return this.interpolator(t);\n  };\n\n  KeyframesAnimator.prototype.updateOptions = function (_a) {\n    var _b = _a.from,\n        from = _b === void 0 ? 0 : _b,\n        _c = _a.to,\n        to = _c === void 0 ? 1 : _c,\n        ease = _a.ease,\n        offset = _a.offset,\n        _d = _a.duration,\n        duration = _d === void 0 ? 300 : _d;\n    this.options = {\n      from: from,\n      to: to,\n      ease: ease,\n      offset: offset,\n      duration: duration\n    };\n  };\n\n  KeyframesAnimator.prototype.flipTarget = function () {\n    this.values.reverse();\n    this.createInterpolator();\n  };\n\n  KeyframesAnimator.needsInterpolation = function () {\n    return false;\n  };\n\n  KeyframesAnimator.uniqueOptionKeys = /*#__PURE__*/new Set([\"duration\", \"ease\"]);\n  return KeyframesAnimator;\n}();\n\nvar DecayAnimator = /*#__PURE__*/function () {\n  function DecayAnimator(options) {\n    this.isComplete = false;\n    this.updateOptions(options);\n    var _a = this.options,\n        power = _a.power,\n        velocity = _a.velocity,\n        modifyTarget = _a.modifyTarget,\n        from = _a.from;\n    var amplitude = power * velocity;\n    var idealTarget = from + amplitude;\n    var target = typeof modifyTarget === \"undefined\" ? idealTarget : modifyTarget(idealTarget);\n    if (target !== idealTarget) amplitude = target - from;\n    this.target = target;\n    this.amplitude = amplitude;\n  }\n\n  DecayAnimator.prototype.flipTarget = function () {};\n\n  DecayAnimator.prototype.update = function (t) {\n    var _a = this.options,\n        timeConstant = _a.timeConstant,\n        restDelta = _a.restDelta;\n    var delta = -this.amplitude * Math.exp(-t / timeConstant);\n    this.isComplete = !(delta > restDelta || delta < -restDelta);\n    return this.isComplete ? this.target : this.target + delta;\n  };\n\n  DecayAnimator.prototype.updateOptions = function (_a) {\n    var _b = _a === void 0 ? {} : _a,\n        _c = _b.velocity,\n        velocity = _c === void 0 ? 0 : _c,\n        _d = _b.from,\n        from = _d === void 0 ? 0 : _d,\n        _e = _b.power,\n        power = _e === void 0 ? 0.8 : _e,\n        _f = _b.timeConstant,\n        timeConstant = _f === void 0 ? 350 : _f,\n        _g = _b.restDelta,\n        restDelta = _g === void 0 ? 0.5 : _g,\n        modifyTarget = _b.modifyTarget;\n\n    this.options = {\n      velocity: velocity,\n      from: from,\n      power: power,\n      timeConstant: timeConstant,\n      restDelta: restDelta,\n      modifyTarget: modifyTarget\n    };\n  };\n\n  DecayAnimator.needsInterpolation = function () {\n    return false;\n  };\n\n  DecayAnimator.uniqueOptionKeys = /*#__PURE__*/new Set([\"power\", \"timeConstant\", \"modifyTarget\"]);\n  return DecayAnimator;\n}();\n\nvar animators = [KeyframesAnimator, DecayAnimator, SpringAnimator];\nvar types = {\n  keyframes: KeyframesAnimator,\n  spring: SpringAnimator,\n  decay: DecayAnimator\n};\nvar numAnimators = animators.length;\n\nfunction detectAnimationFromOptions(config) {\n  if (Array.isArray(config.to)) {\n    return KeyframesAnimator;\n  } else if (types[config.type]) {\n    return types[config.type];\n  }\n\n  for (var key in config) {\n    for (var i = 0; i < numAnimators; i++) {\n      var animator = animators[i];\n      if (animator.uniqueOptionKeys.has(key)) return animator;\n    }\n  }\n\n  return KeyframesAnimator;\n}\n\nfunction loopElapsed(elapsed, duration, delay) {\n  if (delay === void 0) {\n    delay = 0;\n  }\n\n  return elapsed - duration - delay;\n}\n\nfunction reverseElapsed(elapsed, duration, delay, isForwardPlayback) {\n  if (delay === void 0) {\n    delay = 0;\n  }\n\n  if (isForwardPlayback === void 0) {\n    isForwardPlayback = true;\n  }\n\n  return isForwardPlayback ? loopElapsed(duration + -elapsed, duration, delay) : duration - (elapsed - duration) + delay;\n}\n\nfunction hasRepeatDelayElapsed(elapsed, duration, delay, isForwardPlayback) {\n  return isForwardPlayback ? elapsed >= duration + delay : elapsed <= -delay;\n}\n\nvar framesync = function (update) {\n  var passTimestamp = function (_a) {\n    var delta = _a.delta;\n    return update(delta);\n  };\n\n  return {\n    start: function () {\n      return sync.update(passTimestamp, true, true);\n    },\n    stop: function () {\n      return cancelSync.update(passTimestamp);\n    }\n  };\n};\n\nfunction animate(_a) {\n  var from = _a.from,\n      _b = _a.autoplay,\n      autoplay = _b === void 0 ? true : _b,\n      _c = _a.driver,\n      driver = _c === void 0 ? framesync : _c,\n      _d = _a.elapsed,\n      elapsed = _d === void 0 ? 0 : _d,\n      _e = _a.repeat,\n      repeatMax = _e === void 0 ? 0 : _e,\n      _f = _a.repeatType,\n      repeatType = _f === void 0 ? \"loop\" : _f,\n      _g = _a.repeatDelay,\n      repeatDelay = _g === void 0 ? 0 : _g,\n      onPlay = _a.onPlay,\n      onStop = _a.onStop,\n      onComplete = _a.onComplete,\n      onRepeat = _a.onRepeat,\n      onUpdate = _a.onUpdate,\n      options = __rest(_a, [\"from\", \"autoplay\", \"driver\", \"elapsed\", \"repeat\", \"repeatType\", \"repeatDelay\", \"onPlay\", \"onStop\", \"onComplete\", \"onRepeat\", \"onUpdate\"]);\n\n  var to = options.to;\n  var driverControls;\n  var repeatCount = 0;\n  var computedDuration = options.duration;\n  var latest;\n  var isComplete = false;\n  var isForwardPlayback = true;\n  var interpolateFromNumber;\n  var Animator = detectAnimationFromOptions(options);\n\n  if (Animator.needsInterpolation(from, to)) {\n    interpolateFromNumber = interpolate([0, 100], [from, to], {\n      clamp: false\n    });\n    from = 0;\n    to = 100;\n  }\n\n  var animation = new Animator(__assign(__assign({}, options), {\n    from: from,\n    to: to\n  }));\n\n  function repeat() {\n    repeatCount++;\n\n    if (repeatType === \"reverse\") {\n      isForwardPlayback = repeatCount % 2 === 0;\n      elapsed = reverseElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback);\n    } else {\n      elapsed = loopElapsed(elapsed, computedDuration, repeatDelay);\n      if (repeatType === \"mirror\") animation.flipTarget();\n    }\n\n    isComplete = false;\n    animation.isComplete = false;\n    onRepeat && onRepeat();\n  }\n\n  function complete() {\n    driverControls.stop();\n    onComplete && onComplete();\n  }\n\n  function update(delta) {\n    if (!isForwardPlayback) delta = -delta;\n    elapsed += delta;\n\n    if (!isComplete) {\n      latest = animation.update(Math.max(0, elapsed));\n      if (interpolateFromNumber) latest = interpolateFromNumber(latest);\n      isComplete = isForwardPlayback ? animation.isComplete : elapsed <= 0;\n    }\n\n    onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(latest);\n\n    if (isComplete) {\n      if (repeatCount === 0 && computedDuration === undefined) {\n        computedDuration = elapsed;\n      }\n\n      if (repeatCount < repeatMax) {\n        hasRepeatDelayElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback) && repeat();\n      } else {\n        complete();\n      }\n    }\n  }\n\n  function play() {\n    onPlay === null || onPlay === void 0 ? void 0 : onPlay();\n    driverControls = driver(update);\n    driverControls.start();\n  }\n\n  autoplay && play();\n  return {\n    play: play,\n    pause: function () {},\n    resume: function () {},\n    reverse: function () {},\n    seek: function () {},\n    stop: function () {\n      onStop === null || onStop === void 0 ? void 0 : onStop();\n      driverControls.stop();\n    }\n  };\n}\n\nfunction velocityPerSecond(velocity, frameDuration) {\n  return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nfunction inertia(_a) {\n  var _b = _a.from,\n      from = _b === void 0 ? 0 : _b,\n      _c = _a.velocity,\n      velocity = _c === void 0 ? 0 : _c,\n      min = _a.min,\n      max = _a.max,\n      _d = _a.power,\n      power = _d === void 0 ? 0.8 : _d,\n      _e = _a.timeConstant,\n      timeConstant = _e === void 0 ? 750 : _e,\n      _f = _a.bounceStiffness,\n      bounceStiffness = _f === void 0 ? 500 : _f,\n      _g = _a.bounceDamping,\n      bounceDamping = _g === void 0 ? 10 : _g,\n      _h = _a.restDelta,\n      restDelta = _h === void 0 ? 1 : _h,\n      modifyTarget = _a.modifyTarget,\n      driver = _a.driver,\n      onUpdate = _a.onUpdate,\n      onComplete = _a.onComplete;\n  var currentAnimation;\n\n  function isOutOfBounds(v) {\n    return min !== undefined && v < min || max !== undefined && v > max;\n  }\n\n  function boundaryNearest(v) {\n    if (min === undefined) return max;\n    if (max === undefined) return min;\n    return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n  }\n\n  function startAnimation(options) {\n    currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop();\n    currentAnimation = animate(__assign(__assign({}, options), {\n      driver: driver,\n      onUpdate: function (v) {\n        var _a;\n\n        onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(v);\n        (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, v);\n      },\n      onComplete: onComplete\n    }));\n  }\n\n  function startSpring(options) {\n    startAnimation(__assign({\n      type: \"spring\",\n      stiffness: bounceStiffness,\n      damping: bounceDamping,\n      restDelta: restDelta\n    }, options));\n  }\n\n  if (isOutOfBounds(from)) {\n    startSpring({\n      from: from,\n      velocity: velocity,\n      to: boundaryNearest(from)\n    });\n  } else {\n    var target = power * velocity + from;\n    if (typeof modifyTarget !== \"undefined\") target = modifyTarget(target);\n    var boundary_1 = boundaryNearest(target);\n    var heading_1 = boundary_1 === min ? -1 : 1;\n    var prev_1;\n    var current_1;\n\n    var checkBoundary = function (v) {\n      prev_1 = current_1;\n      velocity = velocityPerSecond(v - prev_1, getFrameData().delta);\n      current_1 = v;\n\n      if (!(boundary_1 - v * heading_1 > 0)) {\n        startSpring({\n          from: current_1,\n          to: boundary_1,\n          velocity: velocity\n        });\n      }\n    };\n\n    startAnimation({\n      type: \"decay\",\n      from: from,\n      velocity: velocity,\n      timeConstant: timeConstant,\n      power: power,\n      restDelta: restDelta,\n      modifyTarget: modifyTarget,\n      onUpdate: isOutOfBounds(target) ? checkBoundary : undefined\n    });\n  }\n\n  return {\n    stop: function () {\n      return currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop();\n    }\n  };\n}\n\nvar radiansToDegrees = function (radians) {\n  return radians * 180 / Math.PI;\n};\n\nvar angle = function (a, b) {\n  if (b === void 0) {\n    b = zeroPoint;\n  }\n\n  return radiansToDegrees(Math.atan2(b.y - a.y, b.x - a.x));\n};\n\nvar applyOffset = function (from, to) {\n  var hasReceivedFrom = true;\n\n  if (to === undefined) {\n    to = from;\n    hasReceivedFrom = false;\n  }\n\n  return function (v) {\n    if (hasReceivedFrom) {\n      return v - from + to;\n    } else {\n      from = v;\n      hasReceivedFrom = true;\n      return to;\n    }\n  };\n};\n\nvar identity = function (v) {\n  return v;\n};\n\nvar createAttractor = function (alterDisplacement) {\n  if (alterDisplacement === void 0) {\n    alterDisplacement = identity;\n  }\n\n  return function (constant, origin, v) {\n    var displacement = origin - v;\n    var springModifiedDisplacement = -(0 - constant + 1) * (0 - alterDisplacement(Math.abs(displacement)));\n    return displacement <= 0 ? origin + springModifiedDisplacement : origin - springModifiedDisplacement;\n  };\n};\n\nvar attract = /*#__PURE__*/createAttractor();\nvar attractExpo = /*#__PURE__*/createAttractor(Math.sqrt);\n\nvar degreesToRadians = function (degrees) {\n  return degrees * Math.PI / 180;\n};\n\nvar isPoint = function (point) {\n  return point.hasOwnProperty('x') && point.hasOwnProperty('y');\n};\n\nvar isPoint3D = function (point) {\n  return isPoint(point) && point.hasOwnProperty('z');\n};\n\nvar distance1D = function (a, b) {\n  return Math.abs(a - b);\n};\n\nfunction distance(a, b) {\n  if (isNum(a) && isNum(b)) {\n    return distance1D(a, b);\n  } else if (isPoint(a) && isPoint(b)) {\n    var xDelta = distance1D(a.x, b.x);\n    var yDelta = distance1D(a.y, b.y);\n    var zDelta = isPoint3D(a) && isPoint3D(b) ? distance1D(a.z, b.z) : 0;\n    return Math.sqrt(Math.pow(xDelta, 2) + Math.pow(yDelta, 2) + Math.pow(zDelta, 2));\n  }\n}\n\nvar pointFromVector = function (origin, angle, distance) {\n  angle = degreesToRadians(angle);\n  return {\n    x: distance * Math.cos(angle) + origin.x,\n    y: distance * Math.sin(angle) + origin.y\n  };\n};\n\nvar toDecimal = function (num, precision) {\n  if (precision === void 0) {\n    precision = 2;\n  }\n\n  precision = Math.pow(10, precision);\n  return Math.round(num * precision) / precision;\n};\n\nvar smoothFrame = function (prevValue, nextValue, duration, smoothing) {\n  if (smoothing === void 0) {\n    smoothing = 0;\n  }\n\n  return toDecimal(prevValue + duration * (nextValue - prevValue) / Math.max(smoothing, duration));\n};\n\nvar smooth = function (strength) {\n  if (strength === void 0) {\n    strength = 50;\n  }\n\n  var previousValue = 0;\n  var lastUpdated = 0;\n  return function (v) {\n    var currentFramestamp = getFrameData().timestamp;\n    var timeDelta = currentFramestamp !== lastUpdated ? currentFramestamp - lastUpdated : 0;\n    var newValue = timeDelta ? smoothFrame(previousValue, v, timeDelta, strength) : previousValue;\n    lastUpdated = currentFramestamp;\n    previousValue = newValue;\n    return newValue;\n  };\n};\n\nvar snap = function (points) {\n  if (typeof points === 'number') {\n    return function (v) {\n      return Math.round(v / points) * points;\n    };\n  } else {\n    var i_1 = 0;\n    var numPoints_1 = points.length;\n    return function (v) {\n      var lastDistance = Math.abs(points[0] - v);\n\n      for (i_1 = 1; i_1 < numPoints_1; i_1++) {\n        var point = points[i_1];\n        var distance = Math.abs(point - v);\n        if (distance === 0) return point;\n        if (distance > lastDistance) return points[i_1 - 1];\n        if (i_1 === numPoints_1 - 1) return point;\n        lastDistance = distance;\n      }\n    };\n  }\n};\n\nfunction velocityPerFrame(xps, frameDuration) {\n  return xps / (1000 / frameDuration);\n}\n\nvar wrap = function (min, max, v) {\n  var rangeSize = max - min;\n  return ((v - min) % rangeSize + rangeSize) % rangeSize + min;\n};\n\nvar a = function (a1, a2) {\n  return 1.0 - 3.0 * a2 + 3.0 * a1;\n};\n\nvar b = function (a1, a2) {\n  return 3.0 * a2 - 6.0 * a1;\n};\n\nvar c = function (a1) {\n  return 3.0 * a1;\n};\n\nvar calcBezier = function (t, a1, a2) {\n  return ((a(a1, a2) * t + b(a1, a2)) * t + c(a1)) * t;\n};\n\nvar getSlope = function (t, a1, a2) {\n  return 3.0 * a(a1, a2) * t * t + 2.0 * b(a1, a2) * t + c(a1);\n};\n\nvar subdivisionPrecision = 0.0000001;\nvar subdivisionMaxIterations = 10;\n\nfunction binarySubdivide(aX, aA, aB, mX1, mX2) {\n  var currentX;\n  var currentT;\n  var i = 0;\n\n  do {\n    currentT = aA + (aB - aA) / 2.0;\n    currentX = calcBezier(currentT, mX1, mX2) - aX;\n\n    if (currentX > 0.0) {\n      aB = currentT;\n    } else {\n      aA = currentT;\n    }\n  } while (Math.abs(currentX) > subdivisionPrecision && ++i < subdivisionMaxIterations);\n\n  return currentT;\n}\n\nvar newtonIterations = 8;\nvar newtonMinSlope = 0.001;\n\nfunction newtonRaphsonIterate(aX, aGuessT, mX1, mX2) {\n  for (var i = 0; i < newtonIterations; ++i) {\n    var currentSlope = getSlope(aGuessT, mX1, mX2);\n\n    if (currentSlope === 0.0) {\n      return aGuessT;\n    }\n\n    var currentX = calcBezier(aGuessT, mX1, mX2) - aX;\n    aGuessT -= currentX / currentSlope;\n  }\n\n  return aGuessT;\n}\n\nvar kSplineTableSize = 11;\nvar kSampleStepSize = 1.0 / (kSplineTableSize - 1.0);\n\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n  if (mX1 === mY1 && mX2 === mY2) return linear;\n  var sampleValues = new Float32Array(kSplineTableSize);\n\n  for (var i = 0; i < kSplineTableSize; ++i) {\n    sampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);\n  }\n\n  function getTForX(aX) {\n    var intervalStart = 0.0;\n    var currentSample = 1;\n    var lastSample = kSplineTableSize - 1;\n\n    for (; currentSample !== lastSample && sampleValues[currentSample] <= aX; ++currentSample) {\n      intervalStart += kSampleStepSize;\n    }\n\n    --currentSample;\n    var dist = (aX - sampleValues[currentSample]) / (sampleValues[currentSample + 1] - sampleValues[currentSample]);\n    var guessForT = intervalStart + dist * kSampleStepSize;\n    var initialSlope = getSlope(guessForT, mX1, mX2);\n\n    if (initialSlope >= newtonMinSlope) {\n      return newtonRaphsonIterate(aX, guessForT, mX1, mX2);\n    } else if (initialSlope === 0.0) {\n      return guessForT;\n    } else {\n      return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);\n    }\n  }\n\n  return function (t) {\n    return t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n  };\n}\n\nvar steps = function (steps, direction) {\n  if (direction === void 0) {\n    direction = 'end';\n  }\n\n  return function (progress) {\n    progress = direction === 'end' ? Math.min(progress, 0.999) : Math.max(progress, 0.001);\n    var expanded = progress * steps;\n    var rounded = direction === 'end' ? Math.floor(expanded) : Math.ceil(expanded);\n    return clamp(0, 1, rounded / steps);\n  };\n};\n\nexport { DecayAnimator, KeyframesAnimator, SpringAnimator, angle, animate, anticipate, applyOffset, attract, attractExpo, backIn, backInOut, backOut, bounceIn, bounceInOut, bounceOut, circIn, circInOut, circOut, clamp, createAnticipate, createAttractor, createBackIn, createExpoIn, cubicBezier, degreesToRadians, distance, easeIn, easeInOut, easeOut, inertia, interpolate, isPoint, isPoint3D, linear, mirrorEasing, mix, mixColor, mixComplex, pipe, pointFromVector, progress, radiansToDegrees, reverseEasing, smooth, smoothFrame, snap, steps, toDecimal, velocityPerFrame, velocityPerSecond, wrap };","map":{"version":3,"sources":["/home/saurav/practice/saurav_dutt/node_modules/popmotion/dist/popmotion.es.js"],"names":["__assign","__spreadArrays","__rest","hex","rgba","hsla","complex","color","invariant","sync","cancelSync","getFrameData","SpringAnimator","options","isComplete","updateOptions","createSpring","prototype","_a","velocity","from","to","damping","stiffness","mass","initialVelocity","initialDelta","dampingRatio","Math","sqrt","angularFreq","resolveSpring","t","envelope","exp","expoDecay","sin","cos","resolveVelocity","dampedAngularFreq_1","sinh","cosh","update","restSpeed","restDelta","latest","isBelowVelocityThreshold","abs","isBelowDisplacementThreshold","_b","_c","_d","_e","_f","_g","_h","undefined","flipTarget","needsInterpolation","uniqueOptionKeys","Set","progress","value","toFromDifference","mix","mixLinearColor","v","fromExpo","toExpo","max","colorTypes","getColorType","find","type","test","notAnimatable","mixColor","fromColorType","toColorType","transform","fromColor","parse","toColor","blended","mixFunc","key","alpha","zeroPoint","x","y","z","isNum","combineFunctions","a","b","pipe","transformers","_i","arguments","length","reduce","getMixer","origin","target","mixComplex","mixArray","output","numValues","blendValue","map","fromThis","i","mixObject","analyse","parsed","numNumbers","numRGB","numHSL","hue","template","createTransformer","originStats","targetStats","clamp","min","mixNumber","p","detectMixerFactory","Array","isArray","createMixers","ease","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","push","fastInterpolate","slowInterpolate","input","inputLength","lastInputIndex","mixerIndex","foundMixerIndex","progressInRange","interpolate","isClamp","concat","reverse","interpolator","reverseEasing","easing","mirrorEasing","createExpoIn","power","pow","createBackIn","createAnticipate","backEasing","DEFAULT_OVERSHOOT_STRENGTH","BOUNCE_FIRST_THRESHOLD","BOUNCE_SECOND_THRESHOLD","BOUNCE_THIRD_THRESHOLD","linear","easeIn","easeOut","easeInOut","circIn","acos","circOut","circInOut","backIn","backOut","backInOut","anticipate","ca","cb","cc","bounceOut","p2","bounceIn","bounceInOut","defaultEasing","values","splice","defaultOffset","_value","convertOffsetToTimes","offset","duration","o","KeyframesAnimator","createInterpolator","times","DecayAnimator","modifyTarget","amplitude","idealTarget","timeConstant","delta","animators","types","keyframes","spring","decay","numAnimators","detectAnimationFromOptions","config","animator","has","loopElapsed","elapsed","delay","reverseElapsed","isForwardPlayback","hasRepeatDelayElapsed","framesync","passTimestamp","start","stop","animate","autoplay","driver","repeat","repeatMax","repeatType","repeatDelay","onPlay","onStop","onComplete","onRepeat","onUpdate","driverControls","repeatCount","computedDuration","interpolateFromNumber","Animator","animation","complete","play","pause","resume","seek","velocityPerSecond","frameDuration","inertia","bounceStiffness","bounceDamping","currentAnimation","isOutOfBounds","boundaryNearest","startAnimation","call","startSpring","boundary_1","heading_1","prev_1","current_1","checkBoundary","radiansToDegrees","radians","PI","angle","atan2","applyOffset","hasReceivedFrom","identity","createAttractor","alterDisplacement","constant","displacement","springModifiedDisplacement","attract","attractExpo","degreesToRadians","degrees","isPoint","point","hasOwnProperty","isPoint3D","distance1D","distance","xDelta","yDelta","zDelta","pointFromVector","toDecimal","num","precision","round","smoothFrame","prevValue","nextValue","smoothing","smooth","strength","previousValue","lastUpdated","currentFramestamp","timestamp","timeDelta","newValue","snap","points","i_1","numPoints_1","lastDistance","velocityPerFrame","xps","wrap","rangeSize","a1","a2","c","calcBezier","getSlope","subdivisionPrecision","subdivisionMaxIterations","binarySubdivide","aX","aA","aB","mX1","mX2","currentX","currentT","newtonIterations","newtonMinSlope","newtonRaphsonIterate","aGuessT","currentSlope","kSplineTableSize","kSampleStepSize","cubicBezier","mY1","mY2","sampleValues","Float32Array","getTForX","intervalStart","currentSample","lastSample","dist","guessForT","initialSlope","steps","direction","expanded","rounded","floor","ceil"],"mappings":"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","sourcesContent":["import { __assign, __spreadArrays, __rest } from 'tslib';\nimport { hex, rgba, hsla, complex, color } from 'style-value-types';\nimport { invariant } from 'hey-listen';\nimport sync, { cancelSync, getFrameData } from 'framesync';\n\nvar SpringAnimator = /*#__PURE__*/function () {\n    function SpringAnimator(options) {\n        this.isComplete = false;\n        this.updateOptions(options);\n        this.createSpring();\n    }\n    SpringAnimator.prototype.createSpring = function () {\n        var _a = this.options,\n            velocity = _a.velocity,\n            from = _a.from,\n            to = _a.to,\n            damping = _a.damping,\n            stiffness = _a.stiffness,\n            mass = _a.mass;\n        var initialVelocity = velocity ? -(velocity / 1000) : 0.0;\n        var initialDelta = to - from;\n        var dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n        var angularFreq = Math.sqrt(stiffness / mass) / 1000;\n        if (dampingRatio < 1) {\n            this.resolveSpring = function (t) {\n                var envelope = Math.exp(-dampingRatio * angularFreq * t);\n                var expoDecay = angularFreq * Math.sqrt(1.0 - dampingRatio * dampingRatio);\n                return to - envelope * ((initialVelocity + dampingRatio * angularFreq * initialDelta) / expoDecay * Math.sin(expoDecay * t) + initialDelta * Math.cos(expoDecay * t));\n            };\n            this.resolveVelocity = function (t) {\n                var envelope = Math.exp(-dampingRatio * angularFreq * t);\n                var expoDecay = angularFreq * Math.sqrt(1.0 - dampingRatio * dampingRatio);\n                return dampingRatio * angularFreq * envelope * (Math.sin(expoDecay * t) * (initialVelocity + dampingRatio * angularFreq * initialDelta) / expoDecay + initialDelta * Math.cos(expoDecay * t)) - envelope * (Math.cos(expoDecay * t) * (initialVelocity + dampingRatio * angularFreq * initialDelta) - expoDecay * initialDelta * Math.sin(expoDecay * t));\n            };\n        } else if (dampingRatio === 1) {\n            this.resolveSpring = function (t) {\n                var envelope = Math.exp(-angularFreq * t);\n                return to - envelope * (initialDelta + (initialVelocity + angularFreq * initialDelta) * t);\n            };\n            this.resolveVelocity = function () {\n                return 0;\n            };\n        } else {\n            var dampedAngularFreq_1 = angularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n            this.resolveSpring = function (t) {\n                var envelope = Math.exp(-dampingRatio * angularFreq * t);\n                return to - envelope * ((initialVelocity + dampingRatio * angularFreq * initialDelta) * Math.sinh(dampedAngularFreq_1 * t) + dampedAngularFreq_1 * initialDelta * Math.cosh(dampedAngularFreq_1 * t)) / dampedAngularFreq_1;\n            };\n            this.resolveVelocity = function () {\n                return 0;\n            };\n        }\n    };\n    SpringAnimator.prototype.update = function (t) {\n        var _a = this.options,\n            restSpeed = _a.restSpeed,\n            restDelta = _a.restDelta,\n            to = _a.to;\n        var latest = this.resolveSpring(t);\n        var velocity = this.resolveVelocity(t) * 1000;\n        var isBelowVelocityThreshold = Math.abs(velocity) <= restSpeed;\n        var isBelowDisplacementThreshold = Math.abs(to - latest) <= restDelta;\n        this.isComplete = isBelowVelocityThreshold && isBelowDisplacementThreshold;\n        return this.isComplete ? to : latest;\n    };\n    SpringAnimator.prototype.updateOptions = function (_a) {\n        var _b = _a.from,\n            from = _b === void 0 ? 0.0 : _b,\n            _c = _a.to,\n            to = _c === void 0 ? 0.0 : _c,\n            _d = _a.velocity,\n            velocity = _d === void 0 ? 0.0 : _d,\n            _e = _a.stiffness,\n            stiffness = _e === void 0 ? 100 : _e,\n            _f = _a.damping,\n            damping = _f === void 0 ? 10 : _f,\n            _g = _a.mass,\n            mass = _g === void 0 ? 1.0 : _g,\n            _h = _a.restSpeed,\n            restSpeed = _h === void 0 ? 2 : _h,\n            restDelta = _a.restDelta;\n        if (restDelta === undefined) {\n            restDelta = Math.abs(to - from) <= 1 ? 0.01 : 0.4;\n        }\n        this.options = {\n            from: from,\n            to: to,\n            velocity: velocity,\n            stiffness: stiffness,\n            damping: damping,\n            mass: mass,\n            restSpeed: restSpeed,\n            restDelta: restDelta\n        };\n    };\n    SpringAnimator.prototype.flipTarget = function () {\n        var _a = this.options,\n            from = _a.from,\n            to = _a.to,\n            velocity = _a.velocity;\n        this.options.velocity = -velocity;\n        this.options.from = to;\n        this.options.to = from;\n        this.createSpring();\n    };\n    SpringAnimator.needsInterpolation = function (from, to) {\n        return typeof from === \"string\" || typeof to === \"string\";\n    };\n    SpringAnimator.uniqueOptionKeys = /*#__PURE__*/new Set([\"velocity\", \"stiffness\", \"damping\", \"mass\", \"restSpeed\", \"restDelta\"]);\n    return SpringAnimator;\n}();\n\nvar progress = function (from, to, value) {\n    var toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nvar mix = function (from, to, progress) {\n    return -progress * from + progress * to + from;\n};\n\nvar mixLinearColor = function (from, to, v) {\n    var fromExpo = from * from;\n    var toExpo = to * to;\n    return Math.sqrt(Math.max(0, v * (toExpo - fromExpo) + fromExpo));\n};\nvar colorTypes = [hex, rgba, hsla];\nvar getColorType = function (v) {\n    return colorTypes.find(function (type) {\n        return type.test(v);\n    });\n};\nvar notAnimatable = function (color) {\n    return \"'\" + color + \"' is not an animatable color. Use the equivalent color code instead.\";\n};\nvar mixColor = function (from, to) {\n    var fromColorType = getColorType(from);\n    var toColorType = getColorType(to);\n    invariant(!!fromColorType, notAnimatable(from));\n    invariant(!!toColorType, notAnimatable(to));\n    invariant(fromColorType.transform === toColorType.transform, 'Both colors must be hex/RGBA, OR both must be HSLA.');\n    var fromColor = fromColorType.parse(from);\n    var toColor = toColorType.parse(to);\n    var blended = __assign({}, fromColor);\n    var mixFunc = fromColorType === hsla ? mix : mixLinearColor;\n    return function (v) {\n        for (var key in blended) {\n            if (key !== 'alpha') {\n                blended[key] = mixFunc(fromColor[key], toColor[key], v);\n            }\n        }\n        blended.alpha = mix(fromColor.alpha, toColor.alpha, v);\n        return fromColorType.transform(blended);\n    };\n};\n\nvar zeroPoint = {\n    x: 0,\n    y: 0,\n    z: 0\n};\nvar isNum = function (v) {\n    return typeof v === 'number';\n};\n\nvar combineFunctions = function (a, b) {\n    return function (v) {\n        return b(a(v));\n    };\n};\nvar pipe = function () {\n    var transformers = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        transformers[_i] = arguments[_i];\n    }\n    return transformers.reduce(combineFunctions);\n};\n\nfunction getMixer(origin, target) {\n    if (isNum(origin)) {\n        return function (v) {\n            return mix(origin, target, v);\n        };\n    } else if (color.test(origin)) {\n        return mixColor(origin, target);\n    } else {\n        return mixComplex(origin, target);\n    }\n}\nvar mixArray = function (from, to) {\n    var output = __spreadArrays(from);\n    var numValues = output.length;\n    var blendValue = from.map(function (fromThis, i) {\n        return getMixer(fromThis, to[i]);\n    });\n    return function (v) {\n        for (var i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nvar mixObject = function (origin, target) {\n    var output = __assign(__assign({}, origin), target);\n    var blendValue = {};\n    for (var key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return function (v) {\n        for (var key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nfunction analyse(value) {\n    var parsed = complex.parse(value);\n    var numValues = parsed.length;\n    var numNumbers = 0;\n    var numRGB = 0;\n    var numHSL = 0;\n    for (var i = 0; i < numValues; i++) {\n        if (numNumbers || typeof parsed[i] === 'number') {\n            numNumbers++;\n        } else {\n            if (parsed[i].hue !== undefined) {\n                numHSL++;\n            } else {\n                numRGB++;\n            }\n        }\n    }\n    return { parsed: parsed, numNumbers: numNumbers, numRGB: numRGB, numHSL: numHSL };\n}\nvar mixComplex = function (origin, target) {\n    var template = complex.createTransformer(target);\n    var originStats = analyse(origin);\n    var targetStats = analyse(target);\n    invariant(originStats.numHSL === targetStats.numHSL && originStats.numRGB === targetStats.numRGB && originStats.numNumbers >= targetStats.numNumbers, \"Complex values '\" + origin + \"' and '\" + target + \"' too different to mix. Ensure all colors are of the same type.\");\n    return pipe(mixArray(originStats.parsed, targetStats.parsed), template);\n};\n\nvar clamp = function (min, max, v) {\n    return Math.min(Math.max(v, min), max);\n};\n\nvar mixNumber = function (from, to) {\n    return function (p) {\n        return mix(from, to, p);\n    };\n};\nfunction detectMixerFactory(v) {\n    if (typeof v === 'number') {\n        return mixNumber;\n    } else if (typeof v === 'string') {\n        if (color.test(v)) {\n            return mixColor;\n        } else {\n            return mixComplex;\n        }\n    } else if (Array.isArray(v)) {\n        return mixArray;\n    } else if (typeof v === 'object') {\n        return mixObject;\n    }\n}\nfunction createMixers(output, ease, customMixer) {\n    var mixers = [];\n    var mixerFactory = customMixer || detectMixerFactory(output[0]);\n    var numMixers = output.length - 1;\n    for (var i = 0; i < numMixers; i++) {\n        var mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            var easingFunction = Array.isArray(ease) ? ease[i] : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\nfunction fastInterpolate(_a, _b) {\n    var from = _a[0],\n        to = _a[1];\n    var mixer = _b[0];\n    return function (v) {\n        return mixer(progress(from, to, v));\n    };\n}\nfunction slowInterpolate(input, mixers) {\n    var inputLength = input.length;\n    var lastInputIndex = inputLength - 1;\n    return function (v) {\n        var mixerIndex = 0;\n        var foundMixerIndex = false;\n        if (v <= input[0]) {\n            foundMixerIndex = true;\n        } else if (v >= input[lastInputIndex]) {\n            mixerIndex = lastInputIndex - 1;\n            foundMixerIndex = true;\n        }\n        if (!foundMixerIndex) {\n            var i = 1;\n            for (; i < inputLength; i++) {\n                if (input[i] > v || i === lastInputIndex) {\n                    break;\n                }\n            }\n            mixerIndex = i - 1;\n        }\n        var progressInRange = progress(input[mixerIndex], input[mixerIndex + 1], v);\n        return mixers[mixerIndex](progressInRange);\n    };\n}\nfunction interpolate(input, output, _a) {\n    var _b = _a === void 0 ? {} : _a,\n        _c = _b.clamp,\n        isClamp = _c === void 0 ? true : _c,\n        ease = _b.ease,\n        mixer = _b.mixer;\n    var inputLength = input.length;\n    invariant(inputLength === output.length, 'Both input and output ranges must be the same length');\n    invariant(!ease || !Array.isArray(ease) || ease.length === inputLength - 1, 'Array of easing functions must be of length `input.length - 1`, as it applies to the transitions **between** the defined values.');\n    if (input[0] > input[inputLength - 1]) {\n        input = [].concat(input);\n        output = [].concat(output);\n        input.reverse();\n        output.reverse();\n    }\n    var mixers = createMixers(output, ease, mixer);\n    var interpolator = inputLength === 2 ? fastInterpolate(input, mixers) : slowInterpolate(input, mixers);\n    return isClamp ? function (v) {\n        return interpolator(clamp(input[0], input[inputLength - 1], v));\n    } : interpolator;\n}\n\nvar reverseEasing = function (easing) {\n    return function (p) {\n        return 1 - easing(1 - p);\n    };\n};\nvar mirrorEasing = function (easing) {\n    return function (p) {\n        return p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n    };\n};\nvar createExpoIn = function (power) {\n    return function (p) {\n        return Math.pow(p, power);\n    };\n};\nvar createBackIn = function (power) {\n    return function (p) {\n        return p * p * ((power + 1) * p - power);\n    };\n};\nvar createAnticipate = function (power) {\n    var backEasing = createBackIn(power);\n    return function (p) {\n        return (p *= 2) < 1 ? 0.5 * backEasing(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n    };\n};\n\nvar DEFAULT_OVERSHOOT_STRENGTH = 1.525;\nvar BOUNCE_FIRST_THRESHOLD = 4.0 / 11.0;\nvar BOUNCE_SECOND_THRESHOLD = 8.0 / 11.0;\nvar BOUNCE_THIRD_THRESHOLD = 9.0 / 10.0;\nvar linear = function (p) {\n    return p;\n};\nvar easeIn = /*#__PURE__*/createExpoIn(2);\nvar easeOut = /*#__PURE__*/reverseEasing(easeIn);\nvar easeInOut = /*#__PURE__*/mirrorEasing(easeIn);\nvar circIn = function (p) {\n    return 1 - Math.sin(Math.acos(p));\n};\nvar circOut = /*#__PURE__*/reverseEasing(circIn);\nvar circInOut = /*#__PURE__*/mirrorEasing(circOut);\nvar backIn = /*#__PURE__*/createBackIn(DEFAULT_OVERSHOOT_STRENGTH);\nvar backOut = /*#__PURE__*/reverseEasing(backIn);\nvar backInOut = /*#__PURE__*/mirrorEasing(backIn);\nvar anticipate = /*#__PURE__*/createAnticipate(DEFAULT_OVERSHOOT_STRENGTH);\nvar ca = 4356.0 / 361.0;\nvar cb = 35442.0 / 1805.0;\nvar cc = 16061.0 / 1805.0;\nvar bounceOut = function (p) {\n    if (p === 1 || p === 0) return p;\n    var p2 = p * p;\n    return p < BOUNCE_FIRST_THRESHOLD ? 7.5625 * p2 : p < BOUNCE_SECOND_THRESHOLD ? 9.075 * p2 - 9.9 * p + 3.4 : p < BOUNCE_THIRD_THRESHOLD ? ca * p2 - cb * p + cc : 10.8 * p * p - 20.52 * p + 10.72;\n};\nvar bounceIn = /*#__PURE__*/reverseEasing(bounceOut);\nvar bounceInOut = function (p) {\n    return p < 0.5 ? 0.5 * (1.0 - bounceOut(1.0 - p * 2.0)) : 0.5 * bounceOut(p * 2.0 - 1.0) + 0.5;\n};\n\nfunction defaultEasing(values, easing) {\n    return values.map(function () {\n        return easing || easeInOut;\n    }).splice(0, values.length - 1);\n}\nfunction defaultOffset(values) {\n    var numValues = values.length;\n    return values.map(function (_value, i) {\n        return i !== 0 ? i / (numValues - 1) : 0;\n    });\n}\nfunction convertOffsetToTimes(offset, duration) {\n    return offset.map(function (o) {\n        return o * duration;\n    });\n}\nvar KeyframesAnimator = /*#__PURE__*/function () {\n    function KeyframesAnimator(options) {\n        this.isComplete = false;\n        this.updateOptions(options);\n        var _a = this.options,\n            from = _a.from,\n            to = _a.to;\n        this.values = Array.isArray(to) ? to : [from, to];\n        this.createInterpolator();\n    }\n    KeyframesAnimator.prototype.createInterpolator = function () {\n        var _a = this.options,\n            duration = _a.duration,\n            ease = _a.ease,\n            offset = _a.offset;\n        ease = Array.isArray(ease) ? ease : defaultEasing(this.values, ease);\n        offset = offset || defaultOffset(this.values);\n        var times = convertOffsetToTimes(offset, duration);\n        this.interpolator = interpolate(times, this.values, { ease: ease });\n    };\n    KeyframesAnimator.prototype.update = function (t) {\n        var duration = this.options.duration;\n        this.isComplete = t >= duration;\n        return this.interpolator(t);\n    };\n    KeyframesAnimator.prototype.updateOptions = function (_a) {\n        var _b = _a.from,\n            from = _b === void 0 ? 0 : _b,\n            _c = _a.to,\n            to = _c === void 0 ? 1 : _c,\n            ease = _a.ease,\n            offset = _a.offset,\n            _d = _a.duration,\n            duration = _d === void 0 ? 300 : _d;\n        this.options = { from: from, to: to, ease: ease, offset: offset, duration: duration };\n    };\n    KeyframesAnimator.prototype.flipTarget = function () {\n        this.values.reverse();\n        this.createInterpolator();\n    };\n    KeyframesAnimator.needsInterpolation = function () {\n        return false;\n    };\n    KeyframesAnimator.uniqueOptionKeys = /*#__PURE__*/new Set([\"duration\", \"ease\"]);\n    return KeyframesAnimator;\n}();\n\nvar DecayAnimator = /*#__PURE__*/function () {\n    function DecayAnimator(options) {\n        this.isComplete = false;\n        this.updateOptions(options);\n        var _a = this.options,\n            power = _a.power,\n            velocity = _a.velocity,\n            modifyTarget = _a.modifyTarget,\n            from = _a.from;\n        var amplitude = power * velocity;\n        var idealTarget = from + amplitude;\n        var target = typeof modifyTarget === \"undefined\" ? idealTarget : modifyTarget(idealTarget);\n        if (target !== idealTarget) amplitude = target - from;\n        this.target = target;\n        this.amplitude = amplitude;\n    }\n    DecayAnimator.prototype.flipTarget = function () {};\n    DecayAnimator.prototype.update = function (t) {\n        var _a = this.options,\n            timeConstant = _a.timeConstant,\n            restDelta = _a.restDelta;\n        var delta = -this.amplitude * Math.exp(-t / timeConstant);\n        this.isComplete = !(delta > restDelta || delta < -restDelta);\n        return this.isComplete ? this.target : this.target + delta;\n    };\n    DecayAnimator.prototype.updateOptions = function (_a) {\n        var _b = _a === void 0 ? {} : _a,\n            _c = _b.velocity,\n            velocity = _c === void 0 ? 0 : _c,\n            _d = _b.from,\n            from = _d === void 0 ? 0 : _d,\n            _e = _b.power,\n            power = _e === void 0 ? 0.8 : _e,\n            _f = _b.timeConstant,\n            timeConstant = _f === void 0 ? 350 : _f,\n            _g = _b.restDelta,\n            restDelta = _g === void 0 ? 0.5 : _g,\n            modifyTarget = _b.modifyTarget;\n        this.options = {\n            velocity: velocity,\n            from: from,\n            power: power,\n            timeConstant: timeConstant,\n            restDelta: restDelta,\n            modifyTarget: modifyTarget\n        };\n    };\n    DecayAnimator.needsInterpolation = function () {\n        return false;\n    };\n    DecayAnimator.uniqueOptionKeys = /*#__PURE__*/new Set([\"power\", \"timeConstant\", \"modifyTarget\"]);\n    return DecayAnimator;\n}();\n\nvar animators = [KeyframesAnimator, DecayAnimator, SpringAnimator];\nvar types = {\n    keyframes: KeyframesAnimator,\n    spring: SpringAnimator,\n    decay: DecayAnimator\n};\nvar numAnimators = animators.length;\nfunction detectAnimationFromOptions(config) {\n    if (Array.isArray(config.to)) {\n        return KeyframesAnimator;\n    } else if (types[config.type]) {\n        return types[config.type];\n    }\n    for (var key in config) {\n        for (var i = 0; i < numAnimators; i++) {\n            var animator = animators[i];\n            if (animator.uniqueOptionKeys.has(key)) return animator;\n        }\n    }\n    return KeyframesAnimator;\n}\n\nfunction loopElapsed(elapsed, duration, delay) {\n    if (delay === void 0) {\n        delay = 0;\n    }\n    return elapsed - duration - delay;\n}\nfunction reverseElapsed(elapsed, duration, delay, isForwardPlayback) {\n    if (delay === void 0) {\n        delay = 0;\n    }\n    if (isForwardPlayback === void 0) {\n        isForwardPlayback = true;\n    }\n    return isForwardPlayback ? loopElapsed(duration + -elapsed, duration, delay) : duration - (elapsed - duration) + delay;\n}\nfunction hasRepeatDelayElapsed(elapsed, duration, delay, isForwardPlayback) {\n    return isForwardPlayback ? elapsed >= duration + delay : elapsed <= -delay;\n}\n\nvar framesync = function (update) {\n    var passTimestamp = function (_a) {\n        var delta = _a.delta;\n        return update(delta);\n    };\n    return {\n        start: function () {\n            return sync.update(passTimestamp, true, true);\n        },\n        stop: function () {\n            return cancelSync.update(passTimestamp);\n        }\n    };\n};\nfunction animate(_a) {\n    var from = _a.from,\n        _b = _a.autoplay,\n        autoplay = _b === void 0 ? true : _b,\n        _c = _a.driver,\n        driver = _c === void 0 ? framesync : _c,\n        _d = _a.elapsed,\n        elapsed = _d === void 0 ? 0 : _d,\n        _e = _a.repeat,\n        repeatMax = _e === void 0 ? 0 : _e,\n        _f = _a.repeatType,\n        repeatType = _f === void 0 ? \"loop\" : _f,\n        _g = _a.repeatDelay,\n        repeatDelay = _g === void 0 ? 0 : _g,\n        onPlay = _a.onPlay,\n        onStop = _a.onStop,\n        onComplete = _a.onComplete,\n        onRepeat = _a.onRepeat,\n        onUpdate = _a.onUpdate,\n        options = __rest(_a, [\"from\", \"autoplay\", \"driver\", \"elapsed\", \"repeat\", \"repeatType\", \"repeatDelay\", \"onPlay\", \"onStop\", \"onComplete\", \"onRepeat\", \"onUpdate\"]);\n    var to = options.to;\n    var driverControls;\n    var repeatCount = 0;\n    var computedDuration = options.duration;\n    var latest;\n    var isComplete = false;\n    var isForwardPlayback = true;\n    var interpolateFromNumber;\n    var Animator = detectAnimationFromOptions(options);\n    if (Animator.needsInterpolation(from, to)) {\n        interpolateFromNumber = interpolate([0, 100], [from, to], {\n            clamp: false\n        });\n        from = 0;\n        to = 100;\n    }\n    var animation = new Animator(__assign(__assign({}, options), { from: from, to: to }));\n    function repeat() {\n        repeatCount++;\n        if (repeatType === \"reverse\") {\n            isForwardPlayback = repeatCount % 2 === 0;\n            elapsed = reverseElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback);\n        } else {\n            elapsed = loopElapsed(elapsed, computedDuration, repeatDelay);\n            if (repeatType === \"mirror\") animation.flipTarget();\n        }\n        isComplete = false;\n        animation.isComplete = false;\n        onRepeat && onRepeat();\n    }\n    function complete() {\n        driverControls.stop();\n        onComplete && onComplete();\n    }\n    function update(delta) {\n        if (!isForwardPlayback) delta = -delta;\n        elapsed += delta;\n        if (!isComplete) {\n            latest = animation.update(Math.max(0, elapsed));\n            if (interpolateFromNumber) latest = interpolateFromNumber(latest);\n            isComplete = isForwardPlayback ? animation.isComplete : elapsed <= 0;\n        }\n        onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(latest);\n        if (isComplete) {\n            if (repeatCount === 0 && computedDuration === undefined) {\n                computedDuration = elapsed;\n            }\n            if (repeatCount < repeatMax) {\n                hasRepeatDelayElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback) && repeat();\n            } else {\n                complete();\n            }\n        }\n    }\n    function play() {\n        onPlay === null || onPlay === void 0 ? void 0 : onPlay();\n        driverControls = driver(update);\n        driverControls.start();\n    }\n    autoplay && play();\n    return {\n        play: play,\n        pause: function () {},\n        resume: function () {},\n        reverse: function () {},\n        seek: function () {},\n        stop: function () {\n            onStop === null || onStop === void 0 ? void 0 : onStop();\n            driverControls.stop();\n        }\n    };\n}\n\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nfunction inertia(_a) {\n    var _b = _a.from,\n        from = _b === void 0 ? 0 : _b,\n        _c = _a.velocity,\n        velocity = _c === void 0 ? 0 : _c,\n        min = _a.min,\n        max = _a.max,\n        _d = _a.power,\n        power = _d === void 0 ? 0.8 : _d,\n        _e = _a.timeConstant,\n        timeConstant = _e === void 0 ? 750 : _e,\n        _f = _a.bounceStiffness,\n        bounceStiffness = _f === void 0 ? 500 : _f,\n        _g = _a.bounceDamping,\n        bounceDamping = _g === void 0 ? 10 : _g,\n        _h = _a.restDelta,\n        restDelta = _h === void 0 ? 1 : _h,\n        modifyTarget = _a.modifyTarget,\n        driver = _a.driver,\n        onUpdate = _a.onUpdate,\n        onComplete = _a.onComplete;\n    var currentAnimation;\n    function isOutOfBounds(v) {\n        return min !== undefined && v < min || max !== undefined && v > max;\n    }\n    function boundaryNearest(v) {\n        if (min === undefined) return max;\n        if (max === undefined) return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    }\n    function startAnimation(options) {\n        currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop();\n        currentAnimation = animate(__assign(__assign({}, options), { driver: driver, onUpdate: function (v) {\n                var _a;\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(v);\n                (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, v);\n            }, onComplete: onComplete }));\n    }\n    function startSpring(options) {\n        startAnimation(__assign({ type: \"spring\", stiffness: bounceStiffness, damping: bounceDamping, restDelta: restDelta }, options));\n    }\n    if (isOutOfBounds(from)) {\n        startSpring({ from: from, velocity: velocity, to: boundaryNearest(from) });\n    } else {\n        var target = power * velocity + from;\n        if (typeof modifyTarget !== \"undefined\") target = modifyTarget(target);\n        var boundary_1 = boundaryNearest(target);\n        var heading_1 = boundary_1 === min ? -1 : 1;\n        var prev_1;\n        var current_1;\n        var checkBoundary = function (v) {\n            prev_1 = current_1;\n            velocity = velocityPerSecond(v - prev_1, getFrameData().delta);\n            current_1 = v;\n            if (!(boundary_1 - v * heading_1 > 0)) {\n                startSpring({ from: current_1, to: boundary_1, velocity: velocity });\n            }\n        };\n        startAnimation({\n            type: \"decay\",\n            from: from,\n            velocity: velocity,\n            timeConstant: timeConstant,\n            power: power,\n            restDelta: restDelta,\n            modifyTarget: modifyTarget,\n            onUpdate: isOutOfBounds(target) ? checkBoundary : undefined\n        });\n    }\n    return {\n        stop: function () {\n            return currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop();\n        }\n    };\n}\n\nvar radiansToDegrees = function (radians) {\n    return radians * 180 / Math.PI;\n};\n\nvar angle = function (a, b) {\n    if (b === void 0) {\n        b = zeroPoint;\n    }\n    return radiansToDegrees(Math.atan2(b.y - a.y, b.x - a.x));\n};\n\nvar applyOffset = function (from, to) {\n    var hasReceivedFrom = true;\n    if (to === undefined) {\n        to = from;\n        hasReceivedFrom = false;\n    }\n    return function (v) {\n        if (hasReceivedFrom) {\n            return v - from + to;\n        } else {\n            from = v;\n            hasReceivedFrom = true;\n            return to;\n        }\n    };\n};\n\nvar identity = function (v) {\n    return v;\n};\nvar createAttractor = function (alterDisplacement) {\n    if (alterDisplacement === void 0) {\n        alterDisplacement = identity;\n    }\n    return function (constant, origin, v) {\n        var displacement = origin - v;\n        var springModifiedDisplacement = -(0 - constant + 1) * (0 - alterDisplacement(Math.abs(displacement)));\n        return displacement <= 0 ? origin + springModifiedDisplacement : origin - springModifiedDisplacement;\n    };\n};\nvar attract = /*#__PURE__*/createAttractor();\nvar attractExpo = /*#__PURE__*/createAttractor(Math.sqrt);\n\nvar degreesToRadians = function (degrees) {\n    return degrees * Math.PI / 180;\n};\n\nvar isPoint = function (point) {\n    return point.hasOwnProperty('x') && point.hasOwnProperty('y');\n};\n\nvar isPoint3D = function (point) {\n    return isPoint(point) && point.hasOwnProperty('z');\n};\n\nvar distance1D = function (a, b) {\n    return Math.abs(a - b);\n};\nfunction distance(a, b) {\n    if (isNum(a) && isNum(b)) {\n        return distance1D(a, b);\n    } else if (isPoint(a) && isPoint(b)) {\n        var xDelta = distance1D(a.x, b.x);\n        var yDelta = distance1D(a.y, b.y);\n        var zDelta = isPoint3D(a) && isPoint3D(b) ? distance1D(a.z, b.z) : 0;\n        return Math.sqrt(Math.pow(xDelta, 2) + Math.pow(yDelta, 2) + Math.pow(zDelta, 2));\n    }\n}\n\nvar pointFromVector = function (origin, angle, distance) {\n    angle = degreesToRadians(angle);\n    return {\n        x: distance * Math.cos(angle) + origin.x,\n        y: distance * Math.sin(angle) + origin.y\n    };\n};\n\nvar toDecimal = function (num, precision) {\n    if (precision === void 0) {\n        precision = 2;\n    }\n    precision = Math.pow(10, precision);\n    return Math.round(num * precision) / precision;\n};\n\nvar smoothFrame = function (prevValue, nextValue, duration, smoothing) {\n    if (smoothing === void 0) {\n        smoothing = 0;\n    }\n    return toDecimal(prevValue + duration * (nextValue - prevValue) / Math.max(smoothing, duration));\n};\n\nvar smooth = function (strength) {\n    if (strength === void 0) {\n        strength = 50;\n    }\n    var previousValue = 0;\n    var lastUpdated = 0;\n    return function (v) {\n        var currentFramestamp = getFrameData().timestamp;\n        var timeDelta = currentFramestamp !== lastUpdated ? currentFramestamp - lastUpdated : 0;\n        var newValue = timeDelta ? smoothFrame(previousValue, v, timeDelta, strength) : previousValue;\n        lastUpdated = currentFramestamp;\n        previousValue = newValue;\n        return newValue;\n    };\n};\n\nvar snap = function (points) {\n    if (typeof points === 'number') {\n        return function (v) {\n            return Math.round(v / points) * points;\n        };\n    } else {\n        var i_1 = 0;\n        var numPoints_1 = points.length;\n        return function (v) {\n            var lastDistance = Math.abs(points[0] - v);\n            for (i_1 = 1; i_1 < numPoints_1; i_1++) {\n                var point = points[i_1];\n                var distance = Math.abs(point - v);\n                if (distance === 0) return point;\n                if (distance > lastDistance) return points[i_1 - 1];\n                if (i_1 === numPoints_1 - 1) return point;\n                lastDistance = distance;\n            }\n        };\n    }\n};\n\nfunction velocityPerFrame(xps, frameDuration) {\n    return xps / (1000 / frameDuration);\n}\n\nvar wrap = function (min, max, v) {\n    var rangeSize = max - min;\n    return ((v - min) % rangeSize + rangeSize) % rangeSize + min;\n};\n\nvar a = function (a1, a2) {\n    return 1.0 - 3.0 * a2 + 3.0 * a1;\n};\nvar b = function (a1, a2) {\n    return 3.0 * a2 - 6.0 * a1;\n};\nvar c = function (a1) {\n    return 3.0 * a1;\n};\nvar calcBezier = function (t, a1, a2) {\n    return ((a(a1, a2) * t + b(a1, a2)) * t + c(a1)) * t;\n};\nvar getSlope = function (t, a1, a2) {\n    return 3.0 * a(a1, a2) * t * t + 2.0 * b(a1, a2) * t + c(a1);\n};\nvar subdivisionPrecision = 0.0000001;\nvar subdivisionMaxIterations = 10;\nfunction binarySubdivide(aX, aA, aB, mX1, mX2) {\n    var currentX;\n    var currentT;\n    var i = 0;\n    do {\n        currentT = aA + (aB - aA) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - aX;\n        if (currentX > 0.0) {\n            aB = currentT;\n        } else {\n            aA = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision && ++i < subdivisionMaxIterations);\n    return currentT;\n}\nvar newtonIterations = 8;\nvar newtonMinSlope = 0.001;\nfunction newtonRaphsonIterate(aX, aGuessT, mX1, mX2) {\n    for (var i = 0; i < newtonIterations; ++i) {\n        var currentSlope = getSlope(aGuessT, mX1, mX2);\n        if (currentSlope === 0.0) {\n            return aGuessT;\n        }\n        var currentX = calcBezier(aGuessT, mX1, mX2) - aX;\n        aGuessT -= currentX / currentSlope;\n    }\n    return aGuessT;\n}\nvar kSplineTableSize = 11;\nvar kSampleStepSize = 1.0 / (kSplineTableSize - 1.0);\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    if (mX1 === mY1 && mX2 === mY2) return linear;\n    var sampleValues = new Float32Array(kSplineTableSize);\n    for (var i = 0; i < kSplineTableSize; ++i) {\n        sampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);\n    }\n    function getTForX(aX) {\n        var intervalStart = 0.0;\n        var currentSample = 1;\n        var lastSample = kSplineTableSize - 1;\n        for (; currentSample !== lastSample && sampleValues[currentSample] <= aX; ++currentSample) {\n            intervalStart += kSampleStepSize;\n        }\n        --currentSample;\n        var dist = (aX - sampleValues[currentSample]) / (sampleValues[currentSample + 1] - sampleValues[currentSample]);\n        var guessForT = intervalStart + dist * kSampleStepSize;\n        var initialSlope = getSlope(guessForT, mX1, mX2);\n        if (initialSlope >= newtonMinSlope) {\n            return newtonRaphsonIterate(aX, guessForT, mX1, mX2);\n        } else if (initialSlope === 0.0) {\n            return guessForT;\n        } else {\n            return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);\n        }\n    }\n    return function (t) {\n        return t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n    };\n}\n\nvar steps = function (steps, direction) {\n    if (direction === void 0) {\n        direction = 'end';\n    }\n    return function (progress) {\n        progress = direction === 'end' ? Math.min(progress, 0.999) : Math.max(progress, 0.001);\n        var expanded = progress * steps;\n        var rounded = direction === 'end' ? Math.floor(expanded) : Math.ceil(expanded);\n        return clamp(0, 1, rounded / steps);\n    };\n};\n\nexport { DecayAnimator, KeyframesAnimator, SpringAnimator, angle, animate, anticipate, applyOffset, attract, attractExpo, backIn, backInOut, backOut, bounceIn, bounceInOut, bounceOut, circIn, circInOut, circOut, clamp, createAnticipate, createAttractor, createBackIn, createExpoIn, cubicBezier, degreesToRadians, distance, easeIn, easeInOut, easeOut, inertia, interpolate, isPoint, isPoint3D, linear, mirrorEasing, mix, mixColor, mixComplex, pipe, pointFromVector, progress, radiansToDegrees, reverseEasing, smooth, smoothFrame, snap, steps, toDecimal, velocityPerFrame, velocityPerSecond, wrap };\n"]},"metadata":{},"sourceType":"module"}